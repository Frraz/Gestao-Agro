# /migrations/versions/5d3ac8b338bf_estrutura_recriada.py

"""estrutura recriada

Revision ID: 5d3ac8b338bf
Revises: 
Create Date: 2025-06-23 00:26:50.143779

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '5d3ac8b338bf'
down_revision = None
branch_labels = None
depends_on = None

def index_exists(connection, table_name, index_name):
    sql = """
    SELECT COUNT(1)
    FROM INFORMATION_SCHEMA.STATISTICS
    WHERE table_schema=DATABASE() AND table_name=:table_name AND index_name=:index_name
    """
    res = connection.execute(sa.text(sql), {'table_name': table_name, 'index_name': index_name})
    return res.scalar() > 0

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('auditoria', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=150), nullable=True))
        batch_op.add_column(sa.Column('detalhes', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('ip', sa.String(length=45), nullable=True))
        batch_op.alter_column('entidade',
               existing_type=mysql.VARCHAR(length=100),
               nullable=True)

    conn = op.get_bind()
    # documento
    if index_exists(conn, 'documento', 'idx_documento_data_vencimento'):
        with op.batch_alter_table('documento', schema=None) as batch_op:
            batch_op.drop_index('idx_documento_data_vencimento')
    if index_exists(conn, 'documento', 'idx_documento_tipo'):
        with op.batch_alter_table('documento', schema=None) as batch_op:
            batch_op.drop_index('idx_documento_tipo')

    # endividamento
    if index_exists(conn, 'endividamento', 'idx_endividamento_banco'):
        with op.batch_alter_table('endividamento', schema=None) as batch_op:
            batch_op.drop_index('idx_endividamento_banco')
    if index_exists(conn, 'endividamento', 'idx_endividamento_created_at'):
        with op.batch_alter_table('endividamento', schema=None) as batch_op:
            batch_op.drop_index('idx_endividamento_created_at')
    if index_exists(conn, 'endividamento', 'idx_endividamento_data_vencimento'):
        with op.batch_alter_table('endividamento', schema=None) as batch_op:
            batch_op.drop_index('idx_endividamento_data_vencimento')

    # historico_notificacao
    if index_exists(conn, 'historico_notificacao', 'idx_historico_notificacao_data'):
        with op.batch_alter_table('historico_notificacao', schema=None) as batch_op:
            batch_op.drop_index('idx_historico_notificacao_data')

    # notificacao_endividamento
    if index_exists(conn, 'notificacao_endividamento', 'idx_notificacao_endividamento_ativo'):
        with op.batch_alter_table('notificacao_endividamento', schema=None) as batch_op:
            batch_op.drop_index('idx_notificacao_endividamento_ativo')

    # parcela
    if index_exists(conn, 'parcela', 'idx_parcela_data_vencimento'):
        with op.batch_alter_table('parcela', schema=None) as batch_op:
            batch_op.drop_index('idx_parcela_data_vencimento')
    # if index_exists(conn, 'parcela', 'idx_parcela_endividamento_id'):
    #     with op.batch_alter_table('parcela', schema=None) as batch_op:
    #         batch_op.drop_index('idx_parcela_endividamento_id')
    if index_exists(conn, 'parcela', 'idx_parcela_pago'):
        with op.batch_alter_table('parcela', schema=None) as batch_op:
            batch_op.drop_index('idx_parcela_pago')

    # pessoa
    if index_exists(conn, 'pessoa', 'idx_pessoa_cpf_cnpj'):
        with op.batch_alter_table('pessoa', schema=None) as batch_op:
            batch_op.drop_index('idx_pessoa_cpf_cnpj')
    if index_exists(conn, 'pessoa', 'idx_pessoa_nome'):
        with op.batch_alter_table('pessoa', schema=None) as batch_op:
            batch_op.drop_index('idx_pessoa_nome')

    with op.batch_alter_table('usuario', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=80), nullable=True))
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('usuario', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('username')

    with op.batch_alter_table('pessoa', schema=None) as batch_op:
        batch_op.create_index('idx_pessoa_nome', ['nome'], unique=False)
        batch_op.create_index('idx_pessoa_cpf_cnpj', ['cpf_cnpj'], unique=False)

    with op.batch_alter_table('parcela', schema=None) as batch_op:
        batch_op.create_index('idx_parcela_pago', ['pago'], unique=False)
        # batch_op.create_index('idx_parcela_endividamento_id', ['endividamento_id'], unique=False)
        batch_op.create_index('idx_parcela_data_vencimento', ['data_vencimento'], unique=False)

    with op.batch_alter_table('notificacao_endividamento', schema=None) as batch_op:
        batch_op.create_index('idx_notificacao_endividamento_ativo', ['ativo'], unique=False)

    with op.batch_alter_table('historico_notificacao', schema=None) as batch_op:
        batch_op.create_index('idx_historico_notificacao_data', ['data_envio'], unique=False)

    with op.batch_alter_table('endividamento', schema=None) as batch_op:
        batch_op.create_index('idx_endividamento_data_vencimento', ['data_vencimento_final'], unique=False)
        batch_op.create_index('idx_endividamento_created_at', ['created_at'], unique=False)
        batch_op.create_index('idx_endividamento_banco', ['banco'], unique=False)

    with op.batch_alter_table('documento', schema=None) as batch_op:
        batch_op.create_index('idx_documento_tipo', ['tipo'], unique=False)
        batch_op.create_index('idx_documento_data_vencimento', ['data_vencimento'], unique=False)

    with op.batch_alter_table('auditoria', schema=None) as batch_op:
        batch_op.alter_column('entidade',
               existing_type=mysql.VARCHAR(length=100),
               nullable=False)
        batch_op.drop_column('ip')
        batch_op.drop_column('detalhes')
        batch_op.drop_column('username')

    # ### end Alembic commands ###